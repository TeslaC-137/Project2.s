.data
	theString: .space 2500

	#Error Messages
	INVALID_CHAR: .asciiz "Invalid base-27 number."
	EMPTY: .asciiz "Input is empty."
	TOO_LONG: .asciiz "Input is too long."

.text
	main:
		#Taking user input as string
		li $v0, 8
		la $a0, theString
		li $a1, 2500
		syscall

		# Checking if string is empty
		la $t0, theString
		lb $t1, 0($t0)
		beq $t1, 10, empty

		#Initializing registers to store value of decimal
		li $s0, 0

	#Checking if the length of string is less than or equal to 4
	li $t1, 0   # Counter
	length:
		lb $t2, 0($t0)
		beq $t2, 10, convert     # If \n is encountered move to converting part
		beq $t1, 4, tooLong
		addi $t0, $t0, 1
		beq $t2, 32, length    # If current character is space move to beginning of the loop without incrementing the counter
		addi $t1, $t1, 1
		j length

	convert:
		addi $t2, $t2, -1     # Move one character backward in the string
		li $s7, 0				# Flag to help check space in the middle of string($s0 is 1 after first non space character is encountered, otherwise 0)
		beq $t2, 32, checkSpace


	# Ignore the spaces at the end of theString, if space found in the middle print error message
	checkSpace:
		

	exit:
		#Exiting the program
		li $v0, 10
		syscall
	
	empty:
 		li $v0, 4
 		la $a0 EMPTY
 		syscall
 		j exit

	 tooLong:
	 	li $v0, 4
	 	la $a0, TOO_LONG
	 	syscall
	 	j exit
